// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestBarberPWA.Server.Models;

#nullable disable

namespace TestBarberPWA.Server.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220305163738_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestBarberPWA.Shared.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressID"), 1L, 1);

                    b.Property<string>("LineOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressID = 1,
                            LineOne = "1 A Street",
                            LineTwo = "Somewhere",
                            PersonID = 1,
                            PostCode = "AA11 1AA",
                            Town = "Testville"
                        },
                        new
                        {
                            AddressID = 2,
                            LineOne = "2 B Street",
                            LineTwo = "Somewhere",
                            PersonID = 2,
                            PostCode = "BB22 2BB",
                            Town = "Testville"
                        });
                });

            modelBuilder.Entity("TestBarberPWA.Shared.Appointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentID"), 1L, 1);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentID");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentID = 1,
                            CustomerID = 1,
                            DateTime = new DateTime(2022, 1, 1, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = 2,
                            Notes = "Someone having a full shave and hair cut."
                        });
                });

            modelBuilder.Entity("TestBarberPWA.Shared.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsEmployee")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            DateOfBirth = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "a.aaronson@aaronmail.com",
                            Forename = "Aaron",
                            Gender = 1,
                            IsEmployee = false,
                            PhoneNo = "01234567890",
                            Surname = "Aaronson"
                        },
                        new
                        {
                            PersonID = 2,
                            DateOfBirth = new DateTime(1992, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "b.bettyson@bettymail.com",
                            Forename = "Betty",
                            Gender = 0,
                            IsEmployee = true,
                            PhoneNo = "09876543210",
                            Surname = "Bettyson"
                        });
                });

            modelBuilder.Entity("TestBarberPWA.Shared.Service", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("ServiceID");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ServiceID = 1,
                            Description = "A standard, dry hair cut.",
                            Name = "Hair Cut",
                            Price = 14.99f
                        },
                        new
                        {
                            ServiceID = 2,
                            Description = "A standard, wet shave.",
                            Name = "Shave",
                            Price = 5.99f
                        });
                });

            modelBuilder.Entity("TestBarberPWA.Shared.ServiceSold", b =>
                {
                    b.Property<int>("AppointmentID")
                        .HasColumnType("int");

                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("SubTotal")
                        .HasColumnType("real");

                    b.HasKey("AppointmentID", "ServiceID");

                    b.ToTable("ServicesSold");

                    b.HasData(
                        new
                        {
                            AppointmentID = 1,
                            ServiceID = 1,
                            Quantity = 1,
                            SubTotal = 14.99f
                        },
                        new
                        {
                            AppointmentID = 1,
                            ServiceID = 2,
                            Quantity = 1,
                            SubTotal = 5.99f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
